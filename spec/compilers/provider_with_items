type Subscription {
  a : Bool,
  b : Bool
}

provider Provider : Subscription {
  const NAME = "hello"

  state a : String = ""

  get b : String {
    a
  }

  fun update : Promise(Void) {
    await void
  }

  fun name : String {
    NAME
  }
}

component Main {
  use Provider {
    a: true,
    b: false
  }

  fun render {
    <div/>
  }
}
--------------------------------------------------------------------------------
import {
  createProvider as C,
  createElement as F,
  signal as A,
  useId as E
} from "./runtime.js";

export const
  a = `hello`,
  b = () => {
    return a
  },
  c = A(``),
  d = () => {
    return c.value
  },
  e = new Map(),
  B = C(e, async () => {
    return await null
  }),
  D = () => {
    const f = E();
    B(f, () => {
      return {
        a: true,
        b: false
      }
    });
    return F(`div`, {})
  };
